// Code generated by Octo (https://github.com/oesand/octo). DO NOT EDIT!
//go:build !octogen
// +build !octogen

package foo

import (
	"github.com/oesand/octo"
	als2 "github.com/oesand/octo/testdata/octogen_tests/NestedAnyVariants/foo/nested"
	als1 "github.com/oesand/octo/testdata/octogen_tests/NestedAnyVariants/foo/nested/inner"
)

func IncludeAny(container *octo.Container) {
	octo.Inject(container, func(container *octo.Container) *als1.Struct {
		return &als1.Struct{}
	})
	octo.InjectNamed(container, "key1", func(container *octo.Container) *als1.Named {
		return &als1.Named{
			Inf:   octo.Resolve[als1.Inf](container),
			SlInf: octo.ResolveAll[als1.Inf](container),
		}
	})
	octo.Inject(container, func(container *octo.Container) *als2.Other {
		return &als2.Other{
			Nm:    octo.ResolveNamed[*als1.Named](container, "key1"),
			Inf:   octo.Resolve[als1.Inf](container),
			SlInf: octo.ResolveAll[als1.Inf](container),
		}
	})
	octo.Inject(container, func(container *octo.Container) *als2.NewestStruct {
		return &als2.NewestStruct{}
	})
}
