// Code generated by Octo (https://github.com/oesand/octo). DO NOT EDIT!
//go:build !octogen
// +build !octogen

package foo

import (
	"github.com/oesand/octo"
)

func IncludeAny(container *octo.Container) {
    octo.Inject(container, func(container *octo.Container) *Struct {
        return &Struct{
        }
    })
    octo.Inject(container, func(container *octo.Container) *Other {
        return &Other{
            Inf:octo.Resolve[Inf](container),
            SlInf:octo.ResolveAll[Inf](container),
            Str:octo.Resolve[*Struct](container),
        }
    })
}

func IncludeSecond(container *octo.Container) {
    octo.Inject(container, func(container *octo.Container) *Struct {
        return &Struct{
        }
    })
    octo.Inject(container, func(container *octo.Container) *Other {
        return &Other{
            Inf:octo.Resolve[Inf](container),
            SlInf:octo.ResolveAll[Inf](container),
            Str:octo.Resolve[*Struct](container),
        }
    })
}

func IncludeThird(container *octo.Container) {
    octo.Inject(container, func(container *octo.Container) *Struct {
        return &Struct{
        }
    })
    octo.Inject(container, func(container *octo.Container) *Other {
        return &Other{
            Inf:octo.Resolve[Inf](container),
            SlInf:octo.ResolveAll[Inf](container),
            Str:octo.Resolve[*Struct](container),
        }
    })
}
